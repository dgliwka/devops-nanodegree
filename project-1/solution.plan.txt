
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.azurerm_image.image will be read during apply
  # (depends on a resource or a module with changes pending)
 <= data "azurerm_image" "image" {
      + data_disk           = (known after apply)
      + id                  = (known after apply)
      + location            = (known after apply)
      + name                = "project-1-image"
      + os_disk             = (known after apply)
      + resource_group_name = "project-1-rg"
      + tags                = (known after apply)
      + zone_resilient      = (known after apply)

      + timeouts {
          + read = (known after apply)
        }
    }

  # azurerm_availability_set.main will be created
  + resource "azurerm_availability_set" "main" {
      + id                           = (known after apply)
      + location                     = "westeurope"
      + managed                      = true
      + name                         = "project-1-avset"
      + platform_fault_domain_count  = 3
      + platform_update_domain_count = 5
      + resource_group_name          = "project-1-rg"
      + tags                         = {
          + "environment" = "Production"
        }
    }

  # azurerm_lb.main will be created
  + resource "azurerm_lb" "main" {
      + id                   = (known after apply)
      + location             = "westeurope"
      + name                 = "project-1-lb"
      + private_ip_address   = (known after apply)
      + private_ip_addresses = (known after apply)
      + resource_group_name  = "project-1-rg"
      + sku                  = "Standard"
      + sku_tier             = "Regional"
      + tags                 = {
          + "environment" = "project-1"
        }

      + frontend_ip_configuration {
          + gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          + id                                                 = (known after apply)
          + inbound_nat_rules                                  = (known after apply)
          + load_balancer_rules                                = (known after apply)
          + name                                               = "project-1-ip-config"
          + outbound_rules                                     = (known after apply)
          + private_ip_address                                 = (known after apply)
          + private_ip_address_allocation                      = (known after apply)
          + private_ip_address_version                         = (known after apply)
          + public_ip_address_id                               = (known after apply)
          + public_ip_prefix_id                                = (known after apply)
          + subnet_id                                          = (known after apply)
        }
    }

  # azurerm_lb_backend_address_pool.main will be created
  + resource "azurerm_lb_backend_address_pool" "main" {
      + backend_ip_configurations = (known after apply)
      + id                        = (known after apply)
      + load_balancing_rules      = (known after apply)
      + loadbalancer_id           = (known after apply)
      + name                      = "project-1-bap"
      + outbound_rules            = (known after apply)
    }

  # azurerm_lb_backend_address_pool_address.main[0] will be created
  + resource "azurerm_lb_backend_address_pool_address" "main" {
      + backend_address_pool_id = (known after apply)
      + id                      = (known after apply)
      + ip_address              = (known after apply)
      + name                    = "project-1-bap-address-0"
      + virtual_network_id      = (known after apply)
    }

  # azurerm_lb_backend_address_pool_address.main[1] will be created
  + resource "azurerm_lb_backend_address_pool_address" "main" {
      + backend_address_pool_id = (known after apply)
      + id                      = (known after apply)
      + ip_address              = (known after apply)
      + name                    = "project-1-bap-address-1"
      + virtual_network_id      = (known after apply)
    }

  # azurerm_lb_probe.main will be created
  + resource "azurerm_lb_probe" "main" {
      + id                  = (known after apply)
      + interval_in_seconds = 5
      + load_balancer_rules = (known after apply)
      + loadbalancer_id     = (known after apply)
      + name                = "project-1-http-probe"
      + number_of_probes    = 2
      + port                = 80
      + protocol            = "Http"
      + request_path        = "/"
    }

  # azurerm_lb_rule.main will be created
  + resource "azurerm_lb_rule" "main" {
      + backend_address_pool_ids       = (known after apply)
      + backend_port                   = 80
      + disable_outbound_snat          = false
      + enable_floating_ip             = false
      + frontend_ip_configuration_id   = (known after apply)
      + frontend_ip_configuration_name = "project-1-ip-config"
      + frontend_port                  = 80
      + id                             = (known after apply)
      + idle_timeout_in_minutes        = (known after apply)
      + load_distribution              = (known after apply)
      + loadbalancer_id                = (known after apply)
      + name                           = "project-1-lb-rule"
      + probe_id                       = (known after apply)
      + protocol                       = "Tcp"
    }

  # azurerm_linux_virtual_machine.main[0] will be created
  + resource "azurerm_linux_virtual_machine" "main" {
      + admin_username                  = "packer"
      + allow_extension_operations      = true
      + availability_set_id             = (known after apply)
      + computer_name                   = (known after apply)
      + disable_password_authentication = true
      + extensions_time_budget          = "PT1H30M"
      + id                              = (known after apply)
      + location                        = "westeurope"
      + max_bid_price                   = -1
      + name                            = "project-1-vm-0"
      + network_interface_ids           = (known after apply)
      + patch_mode                      = "ImageDefault"
      + platform_fault_domain           = -1
      + priority                        = "Regular"
      + private_ip_address              = (known after apply)
      + private_ip_addresses            = (known after apply)
      + provision_vm_agent              = true
      + public_ip_address               = (known after apply)
      + public_ip_addresses             = (known after apply)
      + resource_group_name             = "project-1-rg"
      + size                            = "Standard_B1ms"
      + source_image_id                 = (known after apply)
      + tags                            = {
          + "environment" = "project-1"
        }
      + virtual_machine_id              = (known after apply)

      + admin_ssh_key {
          + public_key = <<-EOT
                ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDZRQ1AS+DIZfYWsTTNHNiyw72Yp2O9BNpqZGdrzLz88LxNc0FgiKTXrVHSHJ1BvQ2j+whhKMIagIJvH6kHfyd+pfSo9zzpzw7RcBKJcdjZJmXvylFaQp/Xq51DRnZsESfzFXnxnIc7nS1VwP8jIp0rLCJk0hBnRB7271rldmC1GCubYE5bB2LCzuuRWwRMiQMfKNT/W2ywUwzDUOwI3QnL912G2kIC4J9fBoC2w5cb281ORr6L2RFB8Z4lDFI+Jprr13euiVMoa/m7UpBGUmXs/EY7shfbT1qnJX1LROfI7uvZQu/rYOfy48XnCE9V6e3DLcxaJWgHWmflyZEhP0izqaxLqB63L9FrhueH83q9Ii9GGSWjxTn8xkkT1dXupbXNG30vkLqnVkQw1ccyHpkeDCtwrf1sGfO8Urctzp7ANyZmzxErNtgMaqSIH0SS0am19HDISEaFkoA8F2aR+wrx55fR4xAZQP1A5hSfHYKJa33b/alsGZMjKjIFdSZbOFpJ741XN64GndPxUqYobJ6Tz4hfobdhc8VZzhCGOVGv2l9uCxBKWZsKLPJEE6DsPMDoHmiAK3m5PeogkAKLR960GrKIeh326ihrCaprrtXPmf8zzgw5vGnfbYPe0Qjpc9is7W0b5RhIHDwj9n3JKwLRXWpjiN6DfSYR4FPwb6jmgw==
            EOT
          + username   = "packer"
        }

      + os_disk {
          + caching                   = "ReadWrite"
          + disk_size_gb              = (known after apply)
          + name                      = (known after apply)
          + storage_account_type      = "Standard_LRS"
          + write_accelerator_enabled = false
        }

      + termination_notification {
          + enabled = (known after apply)
          + timeout = (known after apply)
        }
    }

  # azurerm_linux_virtual_machine.main[1] will be created
  + resource "azurerm_linux_virtual_machine" "main" {
      + admin_username                  = "packer"
      + allow_extension_operations      = true
      + availability_set_id             = (known after apply)
      + computer_name                   = (known after apply)
      + disable_password_authentication = true
      + extensions_time_budget          = "PT1H30M"
      + id                              = (known after apply)
      + location                        = "westeurope"
      + max_bid_price                   = -1
      + name                            = "project-1-vm-1"
      + network_interface_ids           = (known after apply)
      + patch_mode                      = "ImageDefault"
      + platform_fault_domain           = -1
      + priority                        = "Regular"
      + private_ip_address              = (known after apply)
      + private_ip_addresses            = (known after apply)
      + provision_vm_agent              = true
      + public_ip_address               = (known after apply)
      + public_ip_addresses             = (known after apply)
      + resource_group_name             = "project-1-rg"
      + size                            = "Standard_B1ms"
      + source_image_id                 = (known after apply)
      + tags                            = {
          + "environment" = "project-1"
        }
      + virtual_machine_id              = (known after apply)

      + admin_ssh_key {
          + public_key = <<-EOT
                ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDZRQ1AS+DIZfYWsTTNHNiyw72Yp2O9BNpqZGdrzLz88LxNc0FgiKTXrVHSHJ1BvQ2j+whhKMIagIJvH6kHfyd+pfSo9zzpzw7RcBKJcdjZJmXvylFaQp/Xq51DRnZsESfzFXnxnIc7nS1VwP8jIp0rLCJk0hBnRB7271rldmC1GCubYE5bB2LCzuuRWwRMiQMfKNT/W2ywUwzDUOwI3QnL912G2kIC4J9fBoC2w5cb281ORr6L2RFB8Z4lDFI+Jprr13euiVMoa/m7UpBGUmXs/EY7shfbT1qnJX1LROfI7uvZQu/rYOfy48XnCE9V6e3DLcxaJWgHWmflyZEhP0izqaxLqB63L9FrhueH83q9Ii9GGSWjxTn8xkkT1dXupbXNG30vkLqnVkQw1ccyHpkeDCtwrf1sGfO8Urctzp7ANyZmzxErNtgMaqSIH0SS0am19HDISEaFkoA8F2aR+wrx55fR4xAZQP1A5hSfHYKJa33b/alsGZMjKjIFdSZbOFpJ741XN64GndPxUqYobJ6Tz4hfobdhc8VZzhCGOVGv2l9uCxBKWZsKLPJEE6DsPMDoHmiAK3m5PeogkAKLR960GrKIeh326ihrCaprrtXPmf8zzgw5vGnfbYPe0Qjpc9is7W0b5RhIHDwj9n3JKwLRXWpjiN6DfSYR4FPwb6jmgw==
            EOT
          + username   = "packer"
        }

      + os_disk {
          + caching                   = "ReadWrite"
          + disk_size_gb              = (known after apply)
          + name                      = (known after apply)
          + storage_account_type      = "Standard_LRS"
          + write_accelerator_enabled = false
        }

      + termination_notification {
          + enabled = (known after apply)
          + timeout = (known after apply)
        }
    }

  # azurerm_managed_disk.main[0] will be created
  + resource "azurerm_managed_disk" "main" {
      + create_option                 = "Empty"
      + disk_iops_read_only           = (known after apply)
      + disk_iops_read_write          = (known after apply)
      + disk_mbps_read_only           = (known after apply)
      + disk_mbps_read_write          = (known after apply)
      + disk_size_gb                  = 30
      + id                            = (known after apply)
      + location                      = "westeurope"
      + logical_sector_size           = (known after apply)
      + max_shares                    = (known after apply)
      + name                          = "project-1-os_disk-0"
      + public_network_access_enabled = true
      + resource_group_name           = "project-1-rg"
      + source_uri                    = (known after apply)
      + storage_account_type          = "Standard_LRS"
      + tags                          = {
          + "environment" = "project-1"
        }
      + tier                          = (known after apply)
    }

  # azurerm_managed_disk.main[1] will be created
  + resource "azurerm_managed_disk" "main" {
      + create_option                 = "Empty"
      + disk_iops_read_only           = (known after apply)
      + disk_iops_read_write          = (known after apply)
      + disk_mbps_read_only           = (known after apply)
      + disk_mbps_read_write          = (known after apply)
      + disk_size_gb                  = 30
      + id                            = (known after apply)
      + location                      = "westeurope"
      + logical_sector_size           = (known after apply)
      + max_shares                    = (known after apply)
      + name                          = "project-1-os_disk-1"
      + public_network_access_enabled = true
      + resource_group_name           = "project-1-rg"
      + source_uri                    = (known after apply)
      + storage_account_type          = "Standard_LRS"
      + tags                          = {
          + "environment" = "project-1"
        }
      + tier                          = (known after apply)
    }

  # azurerm_network_interface.main[0] will be created
  + resource "azurerm_network_interface" "main" {
      + applied_dns_servers           = (known after apply)
      + dns_servers                   = (known after apply)
      + enable_accelerated_networking = false
      + enable_ip_forwarding          = false
      + id                            = (known after apply)
      + internal_dns_name_label       = (known after apply)
      + internal_domain_name_suffix   = (known after apply)
      + location                      = "westeurope"
      + mac_address                   = (known after apply)
      + name                          = "project-1-nic-0"
      + private_ip_address            = (known after apply)
      + private_ip_addresses          = (known after apply)
      + resource_group_name           = "project-1-rg"
      + tags                          = {
          + "environment" = "project-1"
        }
      + virtual_machine_id            = (known after apply)

      + ip_configuration {
          + gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          + name                                               = "internal"
          + primary                                            = (known after apply)
          + private_ip_address                                 = (known after apply)
          + private_ip_address_allocation                      = "Dynamic"
          + private_ip_address_version                         = "IPv4"
          + subnet_id                                          = (known after apply)
        }
    }

  # azurerm_network_interface.main[1] will be created
  + resource "azurerm_network_interface" "main" {
      + applied_dns_servers           = (known after apply)
      + dns_servers                   = (known after apply)
      + enable_accelerated_networking = false
      + enable_ip_forwarding          = false
      + id                            = (known after apply)
      + internal_dns_name_label       = (known after apply)
      + internal_domain_name_suffix   = (known after apply)
      + location                      = "westeurope"
      + mac_address                   = (known after apply)
      + name                          = "project-1-nic-1"
      + private_ip_address            = (known after apply)
      + private_ip_addresses          = (known after apply)
      + resource_group_name           = "project-1-rg"
      + tags                          = {
          + "environment" = "project-1"
        }
      + virtual_machine_id            = (known after apply)

      + ip_configuration {
          + gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          + name                                               = "internal"
          + primary                                            = (known after apply)
          + private_ip_address                                 = (known after apply)
          + private_ip_address_allocation                      = "Dynamic"
          + private_ip_address_version                         = "IPv4"
          + subnet_id                                          = (known after apply)
        }
    }

  # azurerm_network_security_group.main will be created
  + resource "azurerm_network_security_group" "main" {
      + id                  = (known after apply)
      + location            = "westeurope"
      + name                = "project-1-nsg"
      + resource_group_name = "project-1-rg"
      + security_rule       = (known after apply)
      + tags                = {
          + "environment" = "project-1"
        }
    }

  # azurerm_network_security_rule.allow22 will be created
  + resource "azurerm_network_security_rule" "allow22" {
      + access                      = "Allow"
      + description                 = "Allow 22"
      + destination_address_prefix  = "*"
      + destination_port_range      = "22"
      + direction                   = "Inbound"
      + id                          = (known after apply)
      + name                        = "allow22"
      + network_security_group_name = "project-1-nsg"
      + priority                    = 101
      + protocol                    = "Tcp"
      + resource_group_name         = "project-1-rg"
      + source_address_prefix       = "*"
      + source_port_range           = "*"
    }

  # azurerm_network_security_rule.allow_http will be created
  + resource "azurerm_network_security_rule" "allow_http" {
      + access                      = "Allow"
      + description                 = "Allow http"
      + destination_address_prefix  = "*"
      + destination_port_range      = "80"
      + direction                   = "Inbound"
      + id                          = (known after apply)
      + name                        = "allow_http"
      + network_security_group_name = "project-1-nsg"
      + priority                    = 102
      + protocol                    = "Tcp"
      + resource_group_name         = "project-1-rg"
      + source_address_prefix       = "*"
      + source_port_range           = "*"
    }

  # azurerm_network_security_rule.allow_internal_inbound will be created
  + resource "azurerm_network_security_rule" "allow_internal_inbound" {
      + access                       = "Allow"
      + description                  = "Allow internal traffic"
      + destination_address_prefixes = [
          + "10.0.0.0/24",
        ]
      + destination_port_range       = "*"
      + direction                    = "Inbound"
      + id                           = (known after apply)
      + name                         = "allow_internal_inbound"
      + network_security_group_name  = "project-1-nsg"
      + priority                     = 100
      + protocol                     = "*"
      + resource_group_name          = "project-1-rg"
      + source_address_prefixes      = [
          + "10.0.0.0/24",
        ]
      + source_port_range            = "*"
    }

  # azurerm_network_security_rule.allow_internal_outbound will be created
  + resource "azurerm_network_security_rule" "allow_internal_outbound" {
      + access                       = "Allow"
      + description                  = "Allow internal traffic"
      + destination_address_prefixes = [
          + "10.0.0.0/24",
        ]
      + destination_port_range       = "*"
      + direction                    = "Outbound"
      + id                           = (known after apply)
      + name                         = "allow_internal_outbound"
      + network_security_group_name  = "project-1-nsg"
      + priority                     = 100
      + protocol                     = "*"
      + resource_group_name          = "project-1-rg"
      + source_address_prefixes      = [
          + "10.0.0.0/24",
        ]
      + source_port_range            = "*"
    }

  # azurerm_network_security_rule.deny_internet_access will be created
  + resource "azurerm_network_security_rule" "deny_internet_access" {
      + access                      = "Deny"
      + destination_address_prefix  = "*"
      + destination_port_range      = "*"
      + direction                   = "Outbound"
      + id                          = (known after apply)
      + name                        = "deny_internet_access"
      + network_security_group_name = "project-1-nsg"
      + priority                    = 200
      + protocol                    = "*"
      + resource_group_name         = "project-1-rg"
      + source_address_prefix       = "*"
      + source_port_range           = "*"
    }

  # azurerm_public_ip.main will be created
  + resource "azurerm_public_ip" "main" {
      + allocation_method       = "Static"
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "westeurope"
      + name                    = "project-1-pip"
      + resource_group_name     = "project-1-rg"
      + sku                     = "Standard"
      + sku_tier                = "Regional"
      + tags                    = {
          + "environment" = "project-1"
        }
    }

  # azurerm_resource_group.main will be created
  + resource "azurerm_resource_group" "main" {
      + id       = (known after apply)
      + location = "westeurope"
      + name     = "project-1-rg"
      + tags     = {
          + "environment" = "project-1"
        }
    }

  # azurerm_subnet.internal will be created
  + resource "azurerm_subnet" "internal" {
      + address_prefixes                               = [
          + "10.0.0.0/24",
        ]
      + enforce_private_link_endpoint_network_policies = false
      + enforce_private_link_service_network_policies  = false
      + id                                             = (known after apply)
      + name                                           = "project-1-subnet-internal"
      + resource_group_name                            = "project-1-rg"
      + virtual_network_name                           = "project-1-network"
    }

  # azurerm_subnet_network_security_group_association.main will be created
  + resource "azurerm_subnet_network_security_group_association" "main" {
      + id                        = (known after apply)
      + network_security_group_id = (known after apply)
      + subnet_id                 = (known after apply)
    }

  # azurerm_virtual_machine_data_disk_attachment.data[0] will be created
  + resource "azurerm_virtual_machine_data_disk_attachment" "data" {
      + caching                   = "None"
      + create_option             = "Attach"
      + id                        = (known after apply)
      + lun                       = 0
      + managed_disk_id           = (known after apply)
      + virtual_machine_id        = (known after apply)
      + write_accelerator_enabled = false
    }

  # azurerm_virtual_machine_data_disk_attachment.data[1] will be created
  + resource "azurerm_virtual_machine_data_disk_attachment" "data" {
      + caching                   = "None"
      + create_option             = "Attach"
      + id                        = (known after apply)
      + lun                       = 0
      + managed_disk_id           = (known after apply)
      + virtual_machine_id        = (known after apply)
      + write_accelerator_enabled = false
    }

  # azurerm_virtual_network.main will be created
  + resource "azurerm_virtual_network" "main" {
      + address_space       = [
          + "10.0.0.0/22",
        ]
      + dns_servers         = (known after apply)
      + guid                = (known after apply)
      + id                  = (known after apply)
      + location            = "westeurope"
      + name                = "project-1-network"
      + resource_group_name = "project-1-rg"
      + subnet              = (known after apply)
      + tags                = {
          + "environment" = "project-1"
        }
    }

Plan: 26 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + loadbalancer_ip = (known after apply)
